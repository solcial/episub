version: '3'

services:
  
  # p2p audit node
  # monitors all traffic in p2p
  node_audit:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./audit-node
    environment:
      - RUST_BACKTRACE=1
    networks:
      testing_net:
        ipv4_address: 172.28.1.1
    ports:
      - "80:80"

  # global bootstrap node
  node_0:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./episub-node -t t0 -t t1 --audit 172.28.1.1:9000 --size 8 --sender
    environment:
      - RUST_BACKTRACE=1
      - "RUST_LOG=debug,netlink_proto=info"
    depends_on:
      node_audit: # wait for audit node to start
        condition: service_started
    networks:
      testing_net:
        ipv4_address: 172.28.1.2

  # peer node
  # when running use --scale node_t0=N, where N is between 1-1000
  node_t0:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./episub-node --bootstrap /ip4/172.28.1.2/tcp/4001 --audit 172.28.1.1:9000 --topic t0 --size 8
    environment:
      - RUST_BACKTRACE=1
      - "RUST_LOG=debug,netlink_proto=info"
    depends_on:
    depends_on:
      node_audit: # wait for audit node to start
        condition: service_started
      node_0: # wait for bootstrap node to start
        condition: service_started
    networks:
      testing_net:
        
  node_t1:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./episub-node --bootstrap /ip4/172.28.1.2/tcp/4001 --audit 172.28.1.1:9000 --topic t1 --size 8
    environment:
      - RUST_BACKTRACE=1
      - "RUST_LOG=debug,netlink_proto=info"
    depends_on:
      node_audit: # wait for audit node to start
        condition: service_started
      node_0: # wait for bootstrap node to start
        condition: service_started
    networks:
      testing_net:

networks:
  testing_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
